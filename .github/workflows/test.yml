name: Test
on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
env:
  MYPYPATH: /tmp/typehints
  SC_ORIGIN: https://github.com/supercollider/supercollider.git
  SC_BRANCH: develop

jobs:

  cancel:
    name: Cancel previous workflow
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  docs:
    name: Build docs
    needs: [cancel]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: pip
        cache-dependency-path: "**/pyproject.toml"
    - name: Install APT deps
      shell: bash
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update --yes
        sudo apt-get install --yes \
          espeak \
          ffmpeg \
          graphviz \
          lame
    - name: Install SuperCollider
      uses: ./.github/actions/supercollider
      with:
        branch: ${{ env.SC_BRANCH }}
        origin: ${{ env.SC_ORIGIN }}
    - name: Install Supriya
      run: pip install -e .[docs]
    - name: Build docs
      run: make docs
  
  lint:
    name: Lint Supriya
    needs: [cancel]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: pip
        cache-dependency-path: "**/pyproject.toml"
    - name: Install Supriya
      run: pip install -e .[ipython,test]
    - name: Install mypy from master (need https://github.com/python/mypy/pull/13397)
      run: pip install https://github.com/python/mypy/archive/refs/heads/master.zip
    - name: Get Type Hints
      run: pip install --target /tmp/typehints --no-deps uqbar
    - name: Run Black
      run: make black-check
    - name: Run Flake8
      run: make flake8
    - name: Run Mypy
      run: make mypy

  package:
    name: Build wheels on ${{ matrix.os }}
    needs: [cancel]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-11]
    steps:
    - uses: actions/checkout@v3
    - name: Build wheels
      uses: pypa/cibuildwheel@v2.8.1

  test:
    name: Test Supriya
    needs: [cancel]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
        include:
        - os: macos-latest
          python-version: 3.9
        - os: windows-latest
          python-version: 3.9
    timeout-minutes: 45
    steps:
    - uses: actions/checkout@v3
    - name: Setup cache timestamp
      id: current-date
      run: |
        echo "::set-output name=stamp::$(date '+%Y-%m-%d')"
        echo "::set-output name=week::$(date '+%V')"
    - name: Cache Homebrew
      uses: actions/cache@v3
      if: ${{ matrix.os == 'macos-latest' }}
      with:
        path: ~/Library/Caches/Homebrew/downloads
        key: ${{ runner.os }}-homebrew-${{ steps.current-date.outputs.stamp }}
        restore-keys: ${{ runner.os }}-homebrew-
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: "**/pyproject.toml"
    - name: Install Supriya
      run: pip install -e .
    - name: Install SuperCollider (Non-Windows)
      if: ${{ matrix.os != 'windows-latest' }}
      uses: ./.github/actions/supercollider
      with:
        branch: ${{ env.SC_BRANCH }}
        origin: ${{ env.SC_ORIGIN }}
    - name: Install SuperCollider (Windows)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        choco install supercollider
    - name: Setup audio (Windows) # https://github.com/actions/runner-images/issues/2528#issuecomment-934857719
      if: ${{ matrix.os == 'windows-latest' }}
      shell: powershell
      run: |
        Invoke-WebRequest https://github.com/duncanthrax/scream/releases/download/3.8/Scream3.8.zip -OutFile Scream3.8.zip
        Expand-Archive -Path Scream3.8.zip -DestinationPath Scream
        Import-Certificate -FilePath Scream\Install\driver\x64\Scream.cat -CertStoreLocation Cert:\LocalMachine\TrustedPublisher 
        Scream\Install\helpers\devcon-x64.exe install Scream\Install\driver\x64\Scream.inf *Scream
        net start audiosrv
        Get-CimInstance Win32_SoundDevice | fl *
    - name: Sanity-check Supriya
      run: |
        python -c "import supriya; supriya._setup_logging('supriya'); server = supriya.Server(); server.boot(); server.quit(); exit()"
        python -c "from supriya.intervals import IntervalTreeDriverEx; print(IntervalTreeDriverEx)"
    - name: Sanity-check Supriya SHM (Non-Windows)
      if: ${{ matrix.os != 'windows-latest' }}
      run: python -c "from supriya.realtime.shm import ServerSHM; print(ServerSHM)"
    - name: Install Supriya test dependencies
      run: pip install -e .[test]
    - name: Install additional packages
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update --yes
          sudo apt-get install --yes \
            espeak \
            ffmpeg \
            graphviz \
            lame
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install ffmpeg graphviz lame
        elif [ "$RUNNER_OS" == "Windows" ]; then
          choco install ffmpeg graphviz lame
        fi
    - name: Run Pytest
      run: pytest --cov supriya
      timeout-minutes: 10
